name: Build and Release

on:
  workflow_dispatch:
  release:
    types: [published]
jobs:
  build:
    permissions:
      contents: write
    strategy:
      matrix:
        goos: [windows, linux, darwin]
        goarch: [amd64, 386]
        exclude:
          - goarch: 386
            goos: darwin
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Get project dependencies
        run: go mod download
      
      - name: Build
        run: |
          bash build.sh
          cp ${GITHUB_WORKSPACE}/README.md ./build/README.md
          cp ${GITHUB_WORKSPACE}/LICENSE ./build/LICENSE
          cp ${GITHUB_WORKSPACE}/example/* ./build/

      - name: Create package
        shell: bash
        run: |
          cd ./build
          zip -9vr ../palworld-guard_$GOOS_$GOARCH.zip .
          cd ..

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./palworld-guard_$GOOS_$GOARCH.zip
          tag: ${{ github.ref }}
          file_glob: false
